View(VA5)
View(VA)
list_of_files <- list.files(path = ".", recursive = TRUE,        ###This is the command for reading all the _bp_VA.txt files
pattern = "_bp_FD.txt",                   ### However it is not in the scan form but in read.delim
full.names = TRUE)
DT <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE)
sum(DT[c(127764:127770),])
sum(DT[4915,])
sum(DT[4915*2,])
sum(DT[4915*3,])
sum(DT[,1135:1140])
DT<-DT[-c(4915*1,4915*2,4915*3,4915*4,4915*5,4915*6,4915*7,4915*8,4915*9,4915*10,4915*11,4915*12,4915*13,
4915*14,4915*15,4915*16,4915*17,4915*18,4915*19,4915*20,4915*21,4915*22,4915*23,4915*24,4915*25,
4915*26),-c(1135:1140)]
country<-rep(rep(countryi, each=26),26)
industry<-rep(rep(industryi,189),26)
year<-rep(years, each=189*26)
DT<-data.frame(year,country,industry, DT)
countryn<-rep(countryi, each=6)
Demandin<-rep(Demandi, 189)
nam<-paste(countryn, Demandin, sep=",")
names(DT)<-c("year","country", "industry", nam)
FD<-DT
rm(DT)
View(FD)
VAAgrAFG1990<-VA6[1,]
sum(VAAgrAFG1990)
View(VA6)
VAAgrAFG1990<-VA6[1,3:9]
sum(VAAgrAFG1990)
VAAgrAFG1990<-VA6[1,4:9]
sum(VAAgrAFG1990)
View(VA6)
VAAgrAFG1990<-VA6[27,4:9]
sum(VAAgrAFG1990)
FDAgrAFG1990<-FD[1,4:]
FDAgrAFG1990<-FD[1,4:1137]
sum(FDAgrAFG1990)
T1990<-read.delim("C:/Users/User/Documents/2020_Summer/R/Eora26/Eora26_1990_bp_T.txt", header = FALSE)
T1990<-T1990[-4195,]
T1990<-read.delim("C:/Users/User/Documents/2020_Summer/R/Eora26/Eora26_1990_bp_T.txt", header = FALSE)
T1990<-T1990[-4195,-4915]
ColAgrAFG1990<-T1990[,1]
Col1AgrAFG1990<-T1990[,1]
Row1AgrAFG1990<-T1990[,1]
Row1AgrAFG1990<-T1990[1,]
Col1AgrAFG1990<-T1990[,1]
VAAgrAFG1990<-VA6[27,4:9]
Col1AgrAFG1990 + VAAgrAFG1990
Row1AgrAFG1990 + FDAgrAFG1990
sum(Col1AgrAFG1990) + sum(VAAgrAFG1990)
sum(Row1AgrAFG1990) + sum(FDAgrAFG1990)
sum(Col1AgrAFG1990) + sum(FDAgrAFG1990)
sum(Row1AgrAFG1990) + sum(VAAgrAFG1990)
library(dplyr)
library(tidyr)
library(data.table)
Demandi<-c("household", "non-profit", "government", "capital formation","inventories", "acquisitions less disposals")
years<-1990:2015
industryi <- c("Agriculture", "Fishing", "Mining and Quarrying",
"Food & Beverages", "Textiles and Wearing Apparel",
"Wood and Paper", "Petroleum, Chemical and Non-Metallic Mineral Products",
"Metal Products", "Electrical and Machinery", "Transport Equipment",
"Other Manufacturing", "Recycling", "Electricity, Gas and Water",
"Construction", "Maintenance and Repair", "Wholesale Trade",
"Retail Trade", "Hotels and Restraurants", "Transport",
"Post and Telecommunications",
"Financial Intermediation and Business Activities",
"Public Administration", "Education, Health and Other Services",
"Private Households", "Others", "Re-export & Re-import")
countryi <- c("AFG", "ALB", "DZA", "AND", "AGO", "ATG", "ARG", "ARM", "ABW", "AUS",
"AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN",
"BMU", "BTN", "BOL", "BIH", "BWA", "BRA", "VGB", "BRN", "BGR", "BFA",
"BDI", "KHM", "CMR", "CAN", "CPV", "CYM", "CAF", "TCD", "CHL", "CHN",
"COL", "COG", "CRI", "HRV", "CUB", "CYP", "CZE", "CIV", "PRK", "COD",
"DNK", "DJI", "DOM", "ECU", "EGY", "SLV", "ERI", "EST", "ETH", "FJI",
"FIN", "FRA", "PYF", "GAB", "GMB", "GEO", "DEU", "GHA", "GRC", "GRL",
"GTM", "GIN", "GUY", "HTI", "HND", "HKG", "HUN", "ISL", "IND", "IDN",
"IRN", "IRQ", "IRL", "ISR", "ITA", "JAM", "JPN", "JOR", "KAZ", "KEN",
"KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU",
"LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MRT", "MUS",
"MEX", "MCO", "MNG", "MNE", "MAR", "MOZ", "MMR", "NAM", "NPL", "NLD",
"ANT", "NCL", "NZL", "NIC", "NER", "NGA", "NOR", "PSE", "OMN", "PAK",
"PAN", "PNG", "PRY", "PER", "PHL", "POL", "PRT", "QAT", "KOR", "MDA",
"ROU", "RUS", "RWA", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC",
"SLE", "SGP", "SVK", "SVN", "SOM", "ZAF", "SDS", "ESP", "LKA", "SUD",
"SUR", "SWZ", "SWE", "CHE", "SYR", "TWN", "TJK", "THA", "MKD", "TGO",
"TTO", "TUN", "TUR", "TKM", "USR", "UGA", "UKR", "ARE", "GBR", "TZA",
"USA", "URY", "UZB", "VUT", "VEN", "VNM", "YEM", "ZMB", "ZWE")
FD1990<-read.delim("C:/Users/User/Documents/2020_Summer/R/Eora26/Eora26_1990_bp_FD.txt", header = FALSE)
FD1990[,1135:1140]
FD1990[c(4915),1:5]
FD1990<-FD1990[-4915,-c(1135:1140)]
country<-rep(countryi, each=26)
industry<-rep(industryi, 189)
countryn<-rep(countryi, each=6)
Demandin<-rep(Demandi, 189)
nam<-paste(countryn, Demandin, sep=",")
nam[1:20]
FD1990<-data.frame(country, industry, FD1990)
names(FD1990)<-c("country", "industry", nam)
names
rm(FD1990)
list_of_files <- list.files(path = ".", recursive = TRUE,        ###This is the command for reading all the _bp_VA.txt files
pattern = "_bp_FD.txt",                   ### However it is not in the scan form but in read.delim
full.names = TRUE)
DT <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE)
sum(DT[c(127764:127770),])
sum(DT[4915,])
sum(DT[4915*2,])
sum(DT[4915*3,])
sum(DT[,1135:1140])
DT<-DT[-c(4915*1,4915*2,4915*3,4915*4,4915*5,4915*6,4915*7,4915*8,4915*9,4915*10,4915*11,4915*12,4915*13,
4915*14,4915*15,4915*16,4915*17,4915*18,4915*19,4915*20,4915*21,4915*22,4915*23,4915*24,4915*25,
4915*26),-c(1135:1140)]
country<-rep(rep(countryi, each=26),26)
industry<-rep(rep(industryi,189),26)
year<-rep(years, each=189*26)
DT<-data.frame(year,country,industry, DT)
countryn<-rep(countryi, each=6)
Demandin<-rep(Demandi, 189)
nam<-paste(countryn, Demandin, sep=",")
names(DT)<-c("year","country", "industry", nam)
FD<-DT
FD2<-FD[order(year,country),]
library(dplyr)
library(tidyr)
library(data.table)
list_of_files <- list.files(path = ".", recursive = TRUE,        ###This is the command for reading all the _bp_VA.txt files
pattern = "_bp_VA.txt",                   ### However it is not in the scan form but in read.delim
full.names = TRUE)
DT <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE)
tDT<-t(DT)
dim(tDT)
tDAT<-tDT[-c(4915),]  ###Eliminate the 'row of zeros'
dim(tDAT)
sum(tDT[4915,])
### Same as before###
years<-1990:2015
variablei <-c("Wages", "Prod taxes", "Prod subsidies", "Profits",
"Net mixed income", "Depreciation")
industryi <- c("Agriculture", "Fishing", "Mining and Quarrying",
"Food & Beverages", "Textiles and Wearing Apparel",
"Wood and Paper", "Petroleum, Chemical and Non-Metallic Mineral Products",
"Metal Products", "Electrical and Machinery", "Transport Equipment",
"Other Manufacturing", "Recycling", "Electricity, Gas and Water",
"Construction", "Maintenance and Repair", "Wholesale Trade",
"Retail Trade", "Hotels and Restraurants", "Transport",
"Post and Telecommunications",
"Financial Intermediation and Business Activities",
"Public Administration", "Education, Health and Other Services",
"Private Households", "Others", "Re-export & Re-import")
countryi <- c("AFG", "ALB", "DZA", "AND", "AGO", "ATG", "ARG", "ARM", "ABW", "AUS",
"AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN",
"BMU", "BTN", "BOL", "BIH", "BWA", "BRA", "VGB", "BRN", "BGR", "BFA",
"BDI", "KHM", "CMR", "CAN", "CPV", "CYM", "CAF", "TCD", "CHL", "CHN",
"COL", "COG", "CRI", "HRV", "CUB", "CYP", "CZE", "CIV", "PRK", "COD",
"DNK", "DJI", "DOM", "ECU", "EGY", "SLV", "ERI", "EST", "ETH", "FJI",
"FIN", "FRA", "PYF", "GAB", "GMB", "GEO", "DEU", "GHA", "GRC", "GRL",
"GTM", "GIN", "GUY", "HTI", "HND", "HKG", "HUN", "ISL", "IND", "IDN",
"IRN", "IRQ", "IRL", "ISR", "ITA", "JAM", "JPN", "JOR", "KAZ", "KEN",
"KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU",
"LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MRT", "MUS",
"MEX", "MCO", "MNG", "MNE", "MAR", "MOZ", "MMR", "NAM", "NPL", "NLD",
"ANT", "NCL", "NZL", "NIC", "NER", "NGA", "NOR", "PSE", "OMN", "PAK",
"PAN", "PNG", "PRY", "PER", "PHL", "POL", "PRT", "QAT", "KOR", "MDA",
"ROU", "RUS", "RWA", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC",
"SLE", "SGP", "SVK", "SVN", "SOM", "ZAF", "SDS", "ESP", "LKA", "SUD",
"SUR", "SWZ", "SWE", "CHE", "SYR", "TWN", "TJK", "THA", "MKD", "TGO",
"TTO", "TUN", "TUR", "TKM", "USR", "UGA", "UKR", "ARE", "GBR", "TZA",
"USA", "URY", "UZB", "VUT", "VEN", "VNM", "YEM", "ZMB", "ZWE")
#### Create the vectors of industry and country###
country<-rep(countryi, each=26)
industry<-rep(industryi,189)
length(industry)
length(country)
###Combine them
VA<-data.frame(country, industry,tDAT)
vars<-rep(variablei, 26)
ys<-rep(years, each=6)
newnames<-paste(vars, ys, sep=" ")
head(newnames)
newnames<-c("country", "industry", newnames)
newnames
names(VA)<-newnames
VA2<-gather(VA, "VAYear", v, 3:158)
dim(VA)
year<-as.vector(rep(years, each=189*26*6))
VAvar<-rep(rep(variablei,each=189*26),26)
VA3<-data.frame(VA2,VAvar,year)
VA4<-VA3[,-c(3)]
VA5<-VA4[c("year","country","industry","VAvar","v")]
VA6<-spread(VA5, VAvar,v)
View(FD2)
View(VA6)
list_of_files <- list.files(path = ".", recursive = TRUE,        ###This is the command for reading all the _bp_VA.txt files
pattern = "_bp_T.txt",                   ### However it is not in the scan form but in read.delim
full.names = TRUE)
rm(list=ls())
### Transactions
library(dplyr)
library(tidyr)
library(data.table)
years<-1990:2015
industryi <- c("Agriculture", "Fishing", "Mining and Quarrying",
"Food & Beverages", "Textiles and Wearing Apparel",
"Wood and Paper", "Petroleum, Chemical and Non-Metallic Mineral Products",
"Metal Products", "Electrical and Machinery", "Transport Equipment",
"Other Manufacturing", "Recycling", "Electricity, Gas and Water",
"Construction", "Maintenance and Repair", "Wholesale Trade",
"Retail Trade", "Hotels and Restraurants", "Transport",
"Post and Telecommunications",
"Financial Intermediation and Business Activities",
"Public Administration", "Education, Health and Other Services",
"Private Households", "Others", "Re-export & Re-import")
countryi <- c("AFG", "ALB", "DZA", "AND", "AGO", "ATG", "ARG", "ARM", "ABW", "AUS",
"AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN",
"BMU", "BTN", "BOL", "BIH", "BWA", "BRA", "VGB", "BRN", "BGR", "BFA",
"BDI", "KHM", "CMR", "CAN", "CPV", "CYM", "CAF", "TCD", "CHL", "CHN",
"COL", "COG", "CRI", "HRV", "CUB", "CYP", "CZE", "CIV", "PRK", "COD",
"DNK", "DJI", "DOM", "ECU", "EGY", "SLV", "ERI", "EST", "ETH", "FJI",
"FIN", "FRA", "PYF", "GAB", "GMB", "GEO", "DEU", "GHA", "GRC", "GRL",
"GTM", "GIN", "GUY", "HTI", "HND", "HKG", "HUN", "ISL", "IND", "IDN",
"IRN", "IRQ", "IRL", "ISR", "ITA", "JAM", "JPN", "JOR", "KAZ", "KEN",
"KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU",
"LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MRT", "MUS",
"MEX", "MCO", "MNG", "MNE", "MAR", "MOZ", "MMR", "NAM", "NPL", "NLD",
"ANT", "NCL", "NZL", "NIC", "NER", "NGA", "NOR", "PSE", "OMN", "PAK",
"PAN", "PNG", "PRY", "PER", "PHL", "POL", "PRT", "QAT", "KOR", "MDA",
"ROU", "RUS", "RWA", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC",
"SLE", "SGP", "SVK", "SVN", "SOM", "ZAF", "SDS", "ESP", "LKA", "SUD",
"SUR", "SWZ", "SWE", "CHE", "SYR", "TWN", "TJK", "THA", "MKD", "TGO",
"TTO", "TUN", "TUR", "TKM", "USR", "UGA", "UKR", "ARE", "GBR", "TZA",
"USA", "URY", "UZB", "VUT", "VEN", "VNM", "YEM", "ZMB", "ZWE")
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "_bp_T.txt",
full.names = TRUE)
TD <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE)
TD <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE)
memory.size()
memory.limit()
memory.limit(size=56000)
list_of_files <- list.files(path = ".", recursive = TRUE,
pattern = "_bp_T.txt",
full.names = TRUE)
TD <- rbindlist(sapply(list_of_files, fread, simplify = FALSE),
use.names = TRUE)
View(TD)
TD<-TD[-c(4915*1,4915*2,4915*3,4915*4,4915*5,4915*6,4915*7,4915*8,4915*9,4915*10,4915*11,4915*12,4915*13,
4915*14,4915*15,4915*16,4915*17,4915*18,4915*19,4915*20,4915*21,4915*22,4915*23,4915*24,4915*25,
4915*26),-4915]
rm(list=ls())
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
profits<-c(2,2,1,3,3,3,2,4)
VA<-data.frame(year, country, industry, wages, profits)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
FD<-data.frame(year,country,industry, A.household,B.household)
variables_industry<-T%>%group_by(year)%>%summarise_if(is.numeric,sum)
variables_industry<-variables_industry%>%pivot_longer(-year,"i", values_to="c")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
View(variables_industry)
Y<-VA %>% select(wages,profits)
Y<-rowSums(Y)
variables_industry<-variables_industry %>% mutate(wages, profits,Y,Y2=wages+profits)
View(variables_industry)
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
profits<-c(2,2,1,3,3,3,2,4)
VA<-data.frame(year, country, industry, wages, profits)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
FD<-data.frame(year,country,industry, A.household,B.household)
variables_industry<-T%>%group_by(year)%>%summarise_if(is.numeric,sum)
variables_industry<-variables_industry%>%pivot_longer(-year,"i", values_to="c")
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
variables_industry<-variables_industry %>% mutate(wages, profits,Y=wages+profits)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
variables_country<-variables_country %>% mutate(sigma=profits/wages, h=c/wages, gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_country)
variables_year<-variables_country %>% group_by(year) %>% summarise_if(is.numeric,sum)
names(variables_industry)
variables_year<-variables_year %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_country)
View(variables_year)
View(variables_country)
View(variables_industry)
View(`T`)
View(VA)
View(FD)
rm(list=ls())
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
profits<-c(2,2,1,3,3,3,2,4)
VA<-data.frame(year, country, industry, wages, profits)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
FD<-data.frame(year,country,industry, A.household,B.household)
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
View(variables_industry)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(wages, profits,Y=wages+profits)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
View(variables_country)
variables_country<-variables_country %>% mutate(sigma=profits/wages, h=c/wages, gamma=Y/(c+wages),
r=profits/(c+wages))
View(VA)
View(variables_industry)
View(variables_country)
variables_year<-variables_country %>% group_by(year) %>% summarise_if(is.numeric,sum)
View(variables_year)
variables_year<-variables_year %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_year)
View(eci)
library(dplyr)
library(tidyr)
library(data.table)
library(ggplot2)
years<-c(1,2)
countryi<-c("A","B")
industryi<-c("C","D")
n<-length(years)
m<-length(countryi)
p<-length(industryi)
year<-rep(years,each=m*p)
country<-rep(rep(countryi, each=p),n)
industry<-rep(industryi, m*n)
AC<-c(3,2,1,0,4,3,2,1)
AD<-c(2,3,1,1,3,4,4,2)
BC<-c(1,2,4,3,2,3,5,4)
BD<-c(1,1,3,4,2,2,4,5)
T<-data.frame(year,country,industry, AC,AD,BC,BD)
wages<-c(2,1,1,1,3,2,2,2)
taxes<-runif(n = 8, min = 0, max = 6)
subsidies<-runif(n = 8, min = 0, max = 6)
profits<-c(2,2,1,3,3,3,2,4)
nmi<-runif(n = 8, min = 0, max = 6)
depreciation<-runif(n = 8, min = 0, max = 6)
VA<-data.frame(year, country, industry, wages, profits,taxes, subsidies, profits, nmi, depreciation)
View(VA)
rm(VA)
VA<-data.frame(year, country, industry, wages, profits,taxes, subsidies, nmi, depreciation)
View(VA)
rm(eci, psrtr, pstre)
rm(pstr)
A.household<-c(2,1,1,3,3,4,2,5)
B.household<-c(1,1,2,2,2,2,1,2)
A.non-profit<-runif(n = 8, min = 0, max = 6)
B.non-profit<-runif(n = 8, min = 0, max = 6)
A.government<-runif(n = 8, min = 0, max = 6)
B.government<-runif(n = 8, min = 0, max = 6)
A.capitalformation<-runif(n = 8, min = 0, max = 6)
B.capitalformation<-runif(n = 8, min = 0, max = 6)
A.inventories<-runif(n = 8, min = 0, max = 6)
B.inventories<-runif(n = 8, min = 0, max = 6)
A.acquisitions<-runif(n = 8, min = 0, max = 6)
B.acquisitions<-runif(n = 8, min = 0, max = 6)
FD<-data.frame(year,country,industry, A.household,B.household, A.government, B.government,
A.capitalformation, B.capitalformation, A.inventories,B.inventories,A.acquisitions,
B.acquisitions)
View(FD)
View(VA)
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
View(variables_industry)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c-d")
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="c-d")
View(variables_industry)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, c-d)
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, "c-d")
View(variables_industry)
variables_industry<-variables_industry %>% mutate(wages, profits,Y=wages+profits.c="c-d"+depreciation)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits.c="c-d"+depreciation)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits.c=c-d+depreciation)
variables_industry<-T %>% group_by(year)%>%summarise_if(is.numeric,sum) #Sum across all columns (by year)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to=constant)
View(variables_industry)
variables_industry<-variables_industry %>% pivot_longer(-year,"i", values_to="constant")
variables_industry<-variables_industry%>%mutate(country,industry)%>%select(year, country, industry, constant)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits.c=constant+depreciation)
variables_industry<-variables_industry %>% mutate(wages, profits, depreciation, Y=wages+profits, c=constant+depreciation)
View(variables_industry)
variables_industry<-variables_industry %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
variables_country<-variables_industry  %>% group_by(year, country) %>% summarise_if(is.numeric,sum)
variables_country<-variables_country %>% mutate(sigma=profits/wages, h=c/wages, gamma=Y/(c+wages),
r=profits/(c+wages))
variables_year<-variables_country %>% group_by(year) %>% summarise_if(is.numeric,sum)
variables_year<-variables_year %>% mutate(sigma=profits/wages,h=c/wages,gamma=Y/(c+wages),
r=profits/(c+wages))
View(variables_industry)
View(VA)
View(variables_year)
View(variables_country)
install.packages("Rcmdr")
library(Rcmdr)
rm(list=ls())
load("~/WIOT/WIOT2014_October16_ROW.RData")
View(wiot)
getwd()
setwd("C:/Users/User/Documents/GitHub/Eora26")
head(wiot)
summary(Country)
summary(wiot$Country)
load("~/GitHub/Eora26/WIOT/WIOT2000_October16_ROW.RData")
View(wiot)
library(dplyr)
library(tidyr)
library(data.table)
library("readxl")
library(ggplot2)
install.packages(c("dplyr", "tidyr", "data.table", "ggplot2"))
library(dplyr)
library(tidyr)
library(data.table)
library("readxl")
library(ggplot2)
load("~/GitHub/Eora26/WIOT/WIOT2014_October16_ROW.RData")
View(wiot)
setwd("C:/Users/User/Documents/GitHub/Eora26/WIOT") #set my working directory
sea<- classif <- read_excel("WIOD_SEA_Nov16.xlsx")
library("readxl")
library(readxl)
sea<- classif <- read_excel("WIOD_SEA_Nov16.xlsx")
library(readxl)
install.packages("readxl")
library(readxl)
sea<- classif <- read_excel("WIOD_SEA_Nov16.xlsx")
sea<-read_excel("WIOD_SEA_Nov16.xlsx")
sea<-read.xlsx("WIOD_SEA_Nov16.xlsx",sheet=2)
?read.xlsx
??read.xlsx
